/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  DependencyRegistryV0,
  DependencyRegistryV0Interface,
} from "../../ArtBlocksDependencyRegistry/DependencyRegistryV0";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "coreRegistryAddress",
        type: "address",
      },
    ],
    name: "CoreRegistryAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "licenseType",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "preferredCDN",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "preferredRepository",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "website",
        type: "string",
      },
    ],
    name: "DependencyAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "additionalCDNIndex",
        type: "uint256",
      },
    ],
    name: "DependencyAdditionalCDNRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "additionalCDN",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "additionalCDNIndex",
        type: "uint256",
      },
    ],
    name: "DependencyAdditionalCDNUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "additionalRepositoryIndex",
        type: "uint256",
      },
    ],
    name: "DependencyAdditionalRepositoryRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "additionalRepository",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "additionalRepositoryIndex",
        type: "uint256",
      },
    ],
    name: "DependencyAdditionalRepositoryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "preferredCDN",
        type: "string",
      },
    ],
    name: "DependencyPreferredCDNUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "preferredRepository",
        type: "string",
      },
    ],
    name: "DependencyPreferredRepositoryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
    ],
    name: "DependencyRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
    ],
    name: "DependencyScriptUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "website",
        type: "string",
      },
    ],
    name: "DependencyWebsiteUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "licenseType",
        type: "bytes32",
      },
    ],
    name: "LicenseTextUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "licenseType",
        type: "bytes32",
      },
    ],
    name: "LicenseTypeAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "coreContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
    ],
    name: "ProjectDependencyOverrideAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "coreContractAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "ProjectDependencyOverrideRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "coreContractAddress",
        type: "address",
      },
    ],
    name: "SupportedCoreContractAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "coreContractAddress",
        type: "address",
      },
    ],
    name: "SupportedCoreContractOverrideAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "coreContractAddress",
        type: "address",
      },
    ],
    name: "SupportedCoreContractOverrideRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "coreContractAddress",
        type: "address",
      },
    ],
    name: "SupportedCoreContractRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "licenseType",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "preferredCDN",
        type: "string",
      },
      {
        internalType: "string",
        name: "preferredRepository",
        type: "string",
      },
      {
        internalType: "string",
        name: "dependencyWebsite",
        type: "string",
      },
    ],
    name: "addDependency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "additionalCDN",
        type: "string",
      },
    ],
    name: "addDependencyAdditionalCDN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "additionalRepository",
        type: "string",
      },
    ],
    name: "addDependencyAdditionalRepository",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "script",
        type: "string",
      },
    ],
    name: "addDependencyScript",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "scriptPointer",
        type: "address",
      },
    ],
    name: "addDependencyScriptPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "licenseType",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "addLicenseText",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "licenseType",
        type: "bytes32",
      },
    ],
    name: "addLicenseType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
    ],
    name: "addProjectDependencyOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "addSupportedCoreContractOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "contract_",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "adminACLAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "adminACLContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getDependencyAdditionalCDN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getDependencyAdditionalRepository",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDependencyCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
    ],
    name: "getDependencyDetails",
    outputs: [
      {
        internalType: "string",
        name: "nameAndVersion",
        type: "string",
      },
      {
        internalType: "string",
        name: "licenseType",
        type: "string",
      },
      {
        internalType: "string",
        name: "preferredCDN",
        type: "string",
      },
      {
        internalType: "uint24",
        name: "additionalCDNCount",
        type: "uint24",
      },
      {
        internalType: "string",
        name: "preferredRepository",
        type: "string",
      },
      {
        internalType: "uint24",
        name: "additionalRepositoryCount",
        type: "uint24",
      },
      {
        internalType: "string",
        name: "dependencyWebsite",
        type: "string",
      },
      {
        internalType: "bool",
        name: "availableOnChain",
        type: "bool",
      },
      {
        internalType: "uint24",
        name: "scriptCount",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "dependencyNameAndVersion",
        type: "string",
      },
    ],
    name: "getDependencyDetailsFromString",
    outputs: [
      {
        internalType: "string",
        name: "nameAndVersion",
        type: "string",
      },
      {
        internalType: "string",
        name: "licenseType",
        type: "string",
      },
      {
        internalType: "string",
        name: "preferredCDN",
        type: "string",
      },
      {
        internalType: "uint24",
        name: "additionalCDNCount",
        type: "uint24",
      },
      {
        internalType: "string",
        name: "preferredRepository",
        type: "string",
      },
      {
        internalType: "uint24",
        name: "additionalRepositoryCount",
        type: "uint24",
      },
      {
        internalType: "string",
        name: "dependencyWebsite",
        type: "string",
      },
      {
        internalType: "bool",
        name: "availableOnChain",
        type: "bool",
      },
      {
        internalType: "uint24",
        name: "scriptCount",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getDependencyNameAndVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "getDependencyNameAndVersionForProject",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDependencyNamesAndVersions",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getDependencyScript",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getDependencyScriptBytecodeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getDependencyScriptBytecodeStorageVersion",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
    ],
    name: "getDependencyScriptCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "licenseType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getLicenseText",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "licenseType",
        type: "bytes32",
      },
    ],
    name: "getLicenseTextChunkCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getLicenseType",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLicenseTypeCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLicenseTypes",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getSupportedCoreContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedCoreContractCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSupportedCoreContracts",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "adminACLContract_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "coreContractAddress",
        type: "address",
      },
    ],
    name: "isSupportedCoreContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
    ],
    name: "removeDependency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removeDependencyAdditionalCDN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "removeDependencyAdditionalRepository",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
    ],
    name: "removeDependencyLastScript",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "licenseType",
        type: "bytes32",
      },
    ],
    name: "removeLicenseLastText",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "projectId",
        type: "uint256",
      },
    ],
    name: "removeProjectDependencyOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "removeSupportedCoreContractOverride",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "input",
        type: "string",
      },
    ],
    name: "stringToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_coreRegistryAddress",
        type: "address",
      },
    ],
    name: "updateCoreRegistryAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "additionalCDN",
        type: "string",
      },
    ],
    name: "updateDependencyAdditionalCDN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "additionalRepository",
        type: "string",
      },
    ],
    name: "updateDependencyAdditionalRepository",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "preferredCDN",
        type: "string",
      },
    ],
    name: "updateDependencyPreferredCDN",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "preferredRepository",
        type: "string",
      },
    ],
    name: "updateDependencyPreferredRepository",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "script",
        type: "string",
      },
    ],
    name: "updateDependencyScript",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "scriptPointer",
        type: "address",
      },
    ],
    name: "updateDependencyScriptPointer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "dependencyNameAndVersion",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "dependencyWebsite",
        type: "string",
      },
    ],
    name: "updateDependencyWebsite",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "licenseType",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "updateLicenseText",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class DependencyRegistryV0__factory {
  static readonly abi = _abi;
  static createInterface(): DependencyRegistryV0Interface {
    return new utils.Interface(_abi) as DependencyRegistryV0Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DependencyRegistryV0 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DependencyRegistryV0;
  }
}
